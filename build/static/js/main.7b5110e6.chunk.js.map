{"version":3,"sources":["ContactForm/ContactForm.module.css","ContactForm/ContactForm.jsx","Filter/Filter.jsx","ContactList/ContactList.jsx","App/App.jsx","index.js"],"names":["module","exports","ContactForm","state","name","number","clearInput","e","target","value","inputHandler","setState","addButtonHandler","preventDefault","props","onAddButton","className","styles","input","type","placeholder","onChange","this","onClick","pattern","Component","Filter","filterHandler","ContactList","contactsList","deleteHandler","map","contact","key","id","defaultProps","App","contacts","filter","addContact","newContact","uuidv4","some","includes","alert","prevState","filterUpdater","length","toLowerCase","deleteButtonHandler","savedUsers","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","listArray","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b5110e6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__3h2NA\"};","import React, { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class ContactForm extends Component {\r\n  static defaultProps = {\r\n    onAddButton: () => {\r\n      return;\r\n    },\r\n  };\r\n\r\n  static propTypes = {\r\n    onAddButton: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  clearInput = (e) => {\r\n    e.target.value = \"\";\r\n  };\r\n\r\n  inputHandler = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  addButtonHandler = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAddButton({ ...this.state });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form>\r\n        <div className={styles.input}>\r\n          <p>Name</p>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Input name\"\r\n            name=\"name\"\r\n            onChange={this.inputHandler}\r\n            onClick={this.clearInput}\r\n          />\r\n          <p>Phone</p>\r\n          <input\r\n            type=\"tel\"\r\n            placeholder=\"Input number\"\r\n            name=\"number\"\r\n            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n            onChange={this.inputHandler}\r\n            onClick={this.clearInput}\r\n          />\r\n        </div>\r\n        <button\r\n          className=\"button\"\r\n          type=\"submit\"\r\n          onClick={this.addButtonHandler}\r\n        >\r\n          Add Contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nexport default function Filter({ filterHandler }) {\r\n  return (\r\n    <>\r\n      <p>Find contacts by name</p>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Input name\"\r\n        name=\"filter\"\r\n        onChange={filterHandler}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.defaultProps = {\r\n  filterHandler: () => {\r\n    return;\r\n  },\r\n}\r\n\r\nFilter.propTypes = {\r\n  filterHandler: PropTypes.func.isRequired,\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function ContactList({ contactsList, deleteHandler }) {\r\n  return (\r\n    <ul className=\"contactsLits\">\r\n      {contactsList.map((contact) => {\r\n        return (\r\n          <li key={contact.id}>\r\n            <div>\r\n              <span>\r\n                {contact.name}: {contact.number}\r\n              </span>\r\n              <button\r\n                type=\"button\"\r\n                name=\"delete\"\r\n                onClick={() => deleteHandler(contact.id)}\r\n              >\r\n                Delete\r\n              </button>\r\n            </div>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.defaultProps = {\r\n  contactsList: [],\r\n  deleteHandler: () => {\r\n    return;\r\n  },\r\n};\r\n\r\nContactList.propTypes = {\r\n  contactsList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import React, { Component } from \"react\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport Filter from \"../Filter/Filter\";\nimport ContactList from \"../ContactList/ContactList\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const savedUsers = localStorage.getItem(\"contacts\");\n\n    if (savedUsers) {\n      this.setState({\n        contacts: JSON.parse(savedUsers),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = (contact) => {\n    const newContact = {\n      ...contact,\n      id: uuidv4(),\n    };\n\n    const { contacts } = this.state;\n\n    const isInContacts = contacts.some((contact) =>\n      contact.name.includes(newContact.name)\n    );\n\n    isInContacts\n      ? alert(`${newContact.name} is already in contacts`)\n      : this.setState((prevState) => {\n          const { contacts } = prevState;\n\n          const newContactsArr = [...contacts, newContact];\n\n          return { contacts: newContactsArr };\n        });\n  };\n\n  filterHandler = (e) => {\n    const { value } = e.target;\n\n    this.setState({\n      filter: value,\n    });\n\n    this.filterUpdater();\n  };\n\n  filterUpdater = () => {\n    const { filter, contacts } = this.state;\n\n    if (filter.length === 0) {\n      return;\n    }\n    const filteredArray = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n    return filteredArray;\n  };\n\n  deleteButtonHandler = (id) => {\n    this.setState((prevState) => {\n      const { contacts } = prevState;\n\n      const newContactsArr = contacts.filter((contact) => contact.id !== id);\n\n      return { contacts: newContactsArr };\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const listArray = filter.length === 0 ? contacts : this.filterUpdater();\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onAddButton={this.addContact} />\n\n        <h2 className=\"contactsTitle\">Contacts</h2>\n\n        <Filter filterHandler={this.filterHandler} />\n        <ContactList\n          contactsList={listArray}\n          deleteHandler={this.deleteButtonHandler}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}